***
	cin.get(str,100); ==> C++ String to read a line of text
	getline(cin, str); ==> C++ string using string data type
	
	for (const int &n : numbers) {
	    cout << n << "  ";
	} ==> for iterate over an array.

	transform(my_str.begin(), my_str.end(), my_str.begin(), ::tolower);
***

"""
65 - 90 Captial Letters
97 - 122 Lower Case Letters
"""

::::

map == > #include <map> 
	map<Data_type, Data_type> nameofMap;

	map.insert({});
	map.clear();
	map.empty();
	map.size();
	map.max_size();
	map.earse(const g);
	map.earse(Iterator);

::::

***
		STANDARD TEMPLATE LIBARY
STL has four components

Algorithms

The header algorithm defines a collection of functions especially designed to be used on ranges of elements.They act on containers and provide means for various operations for the contents of the containers.

Algorithm
	==>Sorting
	==>Searching
	==>Important STL Algorithms
	==>Useful Array algorithms
	==>Partition Operations
Numeric
	==>valarray class

Containers

Containers or container classes store objects and data. There are in total seven standard “first-class” container classes and three container adaptor classes and only seven header files that provide access to these containers or container adaptors.

Sequence Containers: implement data structures which can be accessed in a sequential manner.
	==>vector
	==>list
	==>deque
	==>arrays
	==>forward_list( Introduced in C++11)
Container Adaptors : provide a different interface for sequential containers.
	==>queue
	==>priority_queue
	==>stack
Associative Containers : implement sorted data structures that can be quickly searched (O(log n) complexity).
	==>set
	==>multiset
	==>map
	==>multimap
Unordered Associative Containers : implement unordered data structures that can be quickly searched
	==>unordered_set (Introduced in C++11)
	==>unordered_multiset (Introduced in C++11)
	==>unordered_map (Introduced in C++11)
	==>unordered_multimap (Introduced in C++11)

Functions

	The STL includes classes that overload the function call operator. Instances of such classes are called function objects or functors. Functors allow the working of the associated function to be customized with the help of parameters to be passed.

==>Functors

Iterators

	As the name suggests, iterators are used for working upon a sequence of values. They are the major feature that allow generality in STL.

==>Iterators

Utility Library

	Defined in header <utility>.
==>pair











===> Main Refernces address<===
https://www.geeksforgeeks.org/the-c-standard-template-library-stl/ ==> for STL
